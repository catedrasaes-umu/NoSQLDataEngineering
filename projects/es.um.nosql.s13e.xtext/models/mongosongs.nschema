NoSQLSchema mongosongs
{
  root EntityType Artist
  {
    Variation 1
    {
      _id: String,
      name: String,
      startingYear: Number,
      albums: Reference[0..-1] references Album { type String },
      composedTracks: Reference[0..-1] references Track { type String },
      lyricsTracks: Reference[0..-1] references Track { type String }
    },
    Variation 2
    {
      _id: String,
      name: String,
      startingYear: Number,
      albums: Reference[0..-1] references Album { type String },
      composedTracks: Reference[0..-1] references Track { type String }
    }
  },

  root EntityType Album
  {
    Variation 1
    {
      _id: String,
      formats: PTuple<String>,
      name: String,
      releaseYear: Number,
      tracks: Reference[1..-1] references Album {type String},
      availability: String,
      genre: String,
      prizes: Aggregate[0..-1] aggregates (Prize_1, Prize_2),
      reviews: Aggregate[0..-1] aggregates (Review_1, Review_2)
    },
    Variation 2
    {
      _id: String,
      formats: PTuple<String>,
      name: String,
      releaseYear: Number,
      tracks: Reference[1..-1] references Album {type String},
      availability: PTuple<String>,
      genre: String,
      reviews: Aggregate[0..-1] aggregates (Review_1)
    },
    Variation 3
    {
      _id: String,
      formats: PTuple<String>,
      name: String,
      releaseYear: Number,
      tracks: Reference[1..-1] references Album {type String},
      availability: PTuple<String>,
      genres: PTuple<String>
    }
  },

  root EntityType Track
  {
    Variation 1
    {
      _id: String,
      genres: PTuple<String>,
      length: Double,
      name: String,
      artist_id: Reference[1..-1] references Artist {type String},
      ratings: Aggregate[0..1] aggregates (Rating_1)
    },
    Variation 2
    {
      _id: String,
      genres: PTuple<String>,
      length: Double,
      name: String,
      artist_id: Reference[1..-1] references Artist {type String}
    }
  },

  EntityType Rating
  {
    Variation 1
    {
      score: Double,
      voters: Number
    }
  },

  EntityType Review
  {
    Variation 1
    {
      journalist: String,
      rank: String,
      stars: Number,
      media: Aggregate[0..1] aggregates (Media_1)
    },
    Variation 2
    {
      journalist: String,
      rank: String,
      media: String,
      stars: String
    }
  },

  EntityType Prize
  {
    Variation 1
    {
      event: String,
      units: Number,
      year: Number,
      certification: String,
      name: String
    },
    Variation 2
    {
      event: String,
      units: Number,
      year: Number,
      names: PTuple<String>
    }
  },

  EntityType Media
  {
    Variation 1
    {
      name: String,
      url: String,
      type: String
    }
  }
}
