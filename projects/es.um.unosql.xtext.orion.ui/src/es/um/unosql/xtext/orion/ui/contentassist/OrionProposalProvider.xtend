/*
 * generated by Xtext 2.20.0
 */
package es.um.unosql.xtext.orion.ui.contentassist

/**
 * See https://www.eclipse.org/Xtext/documentation/310_eclipse_support.html#content-assist
 * on how to customize the content assistant.
 */
class OrionProposalProvider extends AbstractOrionProposalProvider
{
/*
  override completeEntityRef_Ref(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor)
  {
    val rootElement = EcoreUtil2.getRootContainer(model) as OrionOperations

    for (e : EcoreUtil2.getAllContentsOfType(rootElement, EntityName))
      acceptor.accept(createCompletionProposal(e.name, e.name, getImage(e), context))

    if (rootElement.importURI !== null)
    {
      for (e : EcoreUtil2.getAllContentsOfType(rootElement.importURI, es.um.unosql.xtext.athena.athena.EntityDecl))
        acceptor.accept(createCompletionProposal(e.name, e.name, getImage(e), context))
    }
  }

  override completeFeatureDecl_Name(EObject model, Assignment assignment, ContentAssistContext context, ICompletionProposalAcceptor acceptor)
  {
    val rootElement = EcoreUtil2.getRootContainer(model) as OrionOperations

    for (e : EcoreUtil2.getAllContentsOfType(rootElement, FeatureDecl))
      acceptor.accept(createCompletionProposal(e.name, e.name, getImage(e), context))

    if (rootElement.importURI !== null)
    {
      for (e : EcoreUtil2.getAllContentsOfType(rootElement.importURI, es.um.unosql.xtext.athena.athena.SimpleFeature))
        acceptor.accept(createCompletionProposal(e.name, e.name, getImage(e), context))
    }
  }*/
}
