/*
 * generated by Xtext 2.10.0
 */
package es.um.nosql.schemainference.dslparameter.ide.contentassist.antlr;

import com.google.inject.Inject;
import es.um.nosql.schemainference.dslparameter.ide.contentassist.antlr.internal.InternalODMParameterParser;
import es.um.nosql.schemainference.dslparameter.services.ODMParameterGrammarAccess;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

public class ODMParameterParser extends AbstractContentAssistParser {

	@Inject
	private ODMParameterGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalODMParameterParser createParser() {
		InternalODMParameterParser result = new InternalODMParameterParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getEBooleanAccess().getAlternatives(), "rule__EBoolean__Alternatives");
					put(grammarAccess.getIndexKindAccess().getAlternatives(), "rule__IndexKind__Alternatives");
					put(grammarAccess.getMongooseModelAccess().getGroup(), "rule__MongooseModel__Group__0");
					put(grammarAccess.getEntityAccess().getGroup(), "rule__Entity__Group__0");
					put(grammarAccess.getEntityAccess().getGroup_5(), "rule__Entity__Group_5__0");
					put(grammarAccess.getEntityAccess().getGroup_5_3(), "rule__Entity__Group_5_3__0");
					put(grammarAccess.getEntityAccess().getGroup_6(), "rule__Entity__Group_6__0");
					put(grammarAccess.getEntityAccess().getGroup_6_3(), "rule__Entity__Group_6_3__0");
					put(grammarAccess.getEntityAccess().getGroup_7(), "rule__Entity__Group_7__0");
					put(grammarAccess.getEntityAccess().getGroup_7_3(), "rule__Entity__Group_7_3__0");
					put(grammarAccess.getEntityAccess().getGroup_8(), "rule__Entity__Group_8__0");
					put(grammarAccess.getEntityAccess().getGroup_8_3(), "rule__Entity__Group_8_3__0");
					put(grammarAccess.getValidatorAccess().getGroup(), "rule__Validator__Group__0");
					put(grammarAccess.getUniqueAccess().getGroup(), "rule__Unique__Group__0");
					put(grammarAccess.getUpdateAccess().getGroup(), "rule__Update__Group__0");
					put(grammarAccess.getIndexAccess().getGroup(), "rule__Index__Group__0");
					put(grammarAccess.getIndexAccess().getGroup_3(), "rule__Index__Group_3__0");
					put(grammarAccess.getMongooseModelAccess().getMapperAssignment_4(), "rule__MongooseModel__MapperAssignment_4");
					put(grammarAccess.getMongooseModelAccess().getParametersAssignment_5(), "rule__MongooseModel__ParametersAssignment_5");
					put(grammarAccess.getEntityAccess().getDiscriminatorAssignment_1(), "rule__Entity__DiscriminatorAssignment_1");
					put(grammarAccess.getEntityAccess().getNameAssignment_3(), "rule__Entity__NameAssignment_3");
					put(grammarAccess.getEntityAccess().getValidatorsAssignment_5_2(), "rule__Entity__ValidatorsAssignment_5_2");
					put(grammarAccess.getEntityAccess().getValidatorsAssignment_5_3_1(), "rule__Entity__ValidatorsAssignment_5_3_1");
					put(grammarAccess.getEntityAccess().getUniquesAssignment_6_2(), "rule__Entity__UniquesAssignment_6_2");
					put(grammarAccess.getEntityAccess().getUniquesAssignment_6_3_1(), "rule__Entity__UniquesAssignment_6_3_1");
					put(grammarAccess.getEntityAccess().getUpdatesAssignment_7_2(), "rule__Entity__UpdatesAssignment_7_2");
					put(grammarAccess.getEntityAccess().getUpdatesAssignment_7_3_1(), "rule__Entity__UpdatesAssignment_7_3_1");
					put(grammarAccess.getEntityAccess().getIndexesAssignment_8_2(), "rule__Entity__IndexesAssignment_8_2");
					put(grammarAccess.getEntityAccess().getIndexesAssignment_8_3_1(), "rule__Entity__IndexesAssignment_8_3_1");
					put(grammarAccess.getValidatorAccess().getFieldNameAssignment_2(), "rule__Validator__FieldNameAssignment_2");
					put(grammarAccess.getValidatorAccess().getValidatorNameAssignment_4(), "rule__Validator__ValidatorNameAssignment_4");
					put(grammarAccess.getUniqueAccess().getFieldNameAssignment_1(), "rule__Unique__FieldNameAssignment_1");
					put(grammarAccess.getUpdateAccess().getFieldNameAssignment_1(), "rule__Update__FieldNameAssignment_1");
					put(grammarAccess.getIndexAccess().getFieldNameAssignment_1(), "rule__Index__FieldNameAssignment_1");
					put(grammarAccess.getIndexAccess().getKindAssignment_3_1(), "rule__Index__KindAssignment_3_1");
				}
			};
		}
		return nameMappings.get(element);
	}

	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			InternalODMParameterParser typedParser = (InternalODMParameterParser) parser;
			typedParser.entryRuleMongooseModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public ODMParameterGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(ODMParameterGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
