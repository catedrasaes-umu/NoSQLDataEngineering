/*
 * generated by Xtext 2.10.0
 */
grammar InternalODMParameter;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package es.um.nosql.schemainference.dslparameter.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package es.um.nosql.schemainference.dslparameter.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import es.um.nosql.schemainference.dslparameter.services.ODMParameterGrammarAccess;

}

@parser::members {

 	private ODMParameterGrammarAccess grammarAccess;

    public InternalODMParameterParser(TokenStream input, ODMParameterGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "MongooseModel";
   	}

   	@Override
   	protected ODMParameterGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleMongooseModel
entryRuleMongooseModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMongooseModelRule()); }
	iv_ruleMongooseModel=ruleMongooseModel
	{ $current=$iv_ruleMongooseModel.current; }
	EOF;

// Rule MongooseModel
ruleMongooseModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ODMParameters'
		{
			newLeafNode(otherlv_0, grammarAccess.getMongooseModelAccess().getODMParametersKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getMongooseModelAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='mapper'
		{
			newLeafNode(otherlv_2, grammarAccess.getMongooseModelAccess().getMapperKeyword_2());
		}
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getMongooseModelAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMongooseModelAccess().getMapperEStringParserRuleCall_4_0());
				}
				lv_mapper_4_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMongooseModelRule());
					}
					set(
						$current,
						"mapper",
						lv_mapper_4_0,
						"es.um.nosql.schemainference.dslparameter.ODMParameter.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMongooseModelAccess().getParametersEntityParserRuleCall_5_0());
				}
				lv_parameters_5_0=ruleEntity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMongooseModelRule());
					}
					add(
						$current,
						"parameters",
						lv_parameters_5_0,
						"es.um.nosql.schemainference.dslparameter.ODMParameter.Entity");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getMongooseModelAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleEntity
entryRuleEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityRule()); }
	iv_ruleEntity=ruleEntity
	{ $current=$iv_ruleEntity.current; }
	EOF;

// Rule Entity
ruleEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEntityAccess().getEntityParameterAction_0(),
					$current);
			}
		)
		(
			(
				lv_discriminator_1_0='discriminator'
				{
					newLeafNode(lv_discriminator_1_0, grammarAccess.getEntityAccess().getDiscriminatorDiscriminatorKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntityRule());
					}
					setWithLastConsumed($current, "discriminator", true, "discriminator");
				}
			)
		)?
		otherlv_2='Entity'
		{
			newLeafNode(otherlv_2, grammarAccess.getEntityAccess().getEntityKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEntityAccess().getNameEStringParserRuleCall_3_0());
				}
				lv_name_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntityRule());
					}
					set(
						$current,
						"name",
						lv_name_3_0,
						"es.um.nosql.schemainference.dslparameter.ODMParameter.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			otherlv_5='validators'
			{
				newLeafNode(otherlv_5, grammarAccess.getEntityAccess().getValidatorsKeyword_5_0());
			}
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEntityAccess().getValidatorsValidatorParserRuleCall_5_2_0());
					}
					lv_validators_7_0=ruleValidator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEntityRule());
						}
						add(
							$current,
							"validators",
							lv_validators_7_0,
							"es.um.nosql.schemainference.dslparameter.ODMParameter.Validator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getEntityAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEntityAccess().getValidatorsValidatorParserRuleCall_5_3_1_0());
						}
						lv_validators_9_0=ruleValidator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEntityRule());
							}
							add(
								$current,
								"validators",
								lv_validators_9_0,
								"es.um.nosql.schemainference.dslparameter.ODMParameter.Validator");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_5_4());
			}
		)?
		(
			otherlv_11='uniques'
			{
				newLeafNode(otherlv_11, grammarAccess.getEntityAccess().getUniquesKeyword_6_0());
			}
			otherlv_12='{'
			{
				newLeafNode(otherlv_12, grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEntityAccess().getUniquesUniqueParserRuleCall_6_2_0());
					}
					lv_uniques_13_0=ruleUnique
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEntityRule());
						}
						add(
							$current,
							"uniques",
							lv_uniques_13_0,
							"es.um.nosql.schemainference.dslparameter.ODMParameter.Unique");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_14=','
				{
					newLeafNode(otherlv_14, grammarAccess.getEntityAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEntityAccess().getUniquesUniqueParserRuleCall_6_3_1_0());
						}
						lv_uniques_15_0=ruleUnique
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEntityRule());
							}
							add(
								$current,
								"uniques",
								lv_uniques_15_0,
								"es.um.nosql.schemainference.dslparameter.ODMParameter.Unique");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_16='}'
			{
				newLeafNode(otherlv_16, grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_6_4());
			}
		)?
		(
			otherlv_17='updates'
			{
				newLeafNode(otherlv_17, grammarAccess.getEntityAccess().getUpdatesKeyword_7_0());
			}
			otherlv_18='{'
			{
				newLeafNode(otherlv_18, grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEntityAccess().getUpdatesUpdateParserRuleCall_7_2_0());
					}
					lv_updates_19_0=ruleUpdate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEntityRule());
						}
						add(
							$current,
							"updates",
							lv_updates_19_0,
							"es.um.nosql.schemainference.dslparameter.ODMParameter.Update");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_20=','
				{
					newLeafNode(otherlv_20, grammarAccess.getEntityAccess().getCommaKeyword_7_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEntityAccess().getUpdatesUpdateParserRuleCall_7_3_1_0());
						}
						lv_updates_21_0=ruleUpdate
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEntityRule());
							}
							add(
								$current,
								"updates",
								lv_updates_21_0,
								"es.um.nosql.schemainference.dslparameter.ODMParameter.Update");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_22='}'
			{
				newLeafNode(otherlv_22, grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_7_4());
			}
		)?
		(
			otherlv_23='indexes'
			{
				newLeafNode(otherlv_23, grammarAccess.getEntityAccess().getIndexesKeyword_8_0());
			}
			otherlv_24='{'
			{
				newLeafNode(otherlv_24, grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_8_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEntityAccess().getIndexesIndexParserRuleCall_8_2_0());
					}
					lv_indexes_25_0=ruleIndex
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEntityRule());
						}
						add(
							$current,
							"indexes",
							lv_indexes_25_0,
							"es.um.nosql.schemainference.dslparameter.ODMParameter.Index");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_26=','
				{
					newLeafNode(otherlv_26, grammarAccess.getEntityAccess().getCommaKeyword_8_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEntityAccess().getIndexesIndexParserRuleCall_8_3_1_0());
						}
						lv_indexes_27_0=ruleIndex
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEntityRule());
							}
							add(
								$current,
								"indexes",
								lv_indexes_27_0,
								"es.um.nosql.schemainference.dslparameter.ODMParameter.Index");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_28='}'
			{
				newLeafNode(otherlv_28, grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_8_4());
			}
		)?
		otherlv_29='}'
		{
			newLeafNode(otherlv_29, grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleValidator
entryRuleValidator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValidatorRule()); }
	iv_ruleValidator=ruleValidator
	{ $current=$iv_ruleValidator.current; }
	EOF;

// Rule Validator
ruleValidator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getValidatorAccess().getValidatorAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getValidatorAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getValidatorAccess().getFieldNameEStringParserRuleCall_2_0());
				}
				lv_fieldName_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValidatorRule());
					}
					set(
						$current,
						"fieldName",
						lv_fieldName_2_0,
						"es.um.nosql.schemainference.dslparameter.ODMParameter.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getValidatorAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getValidatorAccess().getValidatorNameEStringParserRuleCall_4_0());
				}
				lv_ValidatorName_4_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValidatorRule());
					}
					set(
						$current,
						"ValidatorName",
						lv_ValidatorName_4_0,
						"es.um.nosql.schemainference.dslparameter.ODMParameter.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getValidatorAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleUnique
entryRuleUnique returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUniqueRule()); }
	iv_ruleUnique=ruleUnique
	{ $current=$iv_ruleUnique.current; }
	EOF;

// Rule Unique
ruleUnique returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getUniqueAccess().getUniqueAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getUniqueAccess().getFieldNameEStringParserRuleCall_1_0());
				}
				lv_fieldName_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUniqueRule());
					}
					set(
						$current,
						"fieldName",
						lv_fieldName_1_0,
						"es.um.nosql.schemainference.dslparameter.ODMParameter.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleUpdate
entryRuleUpdate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUpdateRule()); }
	iv_ruleUpdate=ruleUpdate
	{ $current=$iv_ruleUpdate.current; }
	EOF;

// Rule Update
ruleUpdate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getUpdateAccess().getUpdateAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getUpdateAccess().getFieldNameEStringParserRuleCall_1_0());
				}
				lv_fieldName_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUpdateRule());
					}
					set(
						$current,
						"fieldName",
						lv_fieldName_1_0,
						"es.um.nosql.schemainference.dslparameter.ODMParameter.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleIndex
entryRuleIndex returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIndexRule()); }
	iv_ruleIndex=ruleIndex
	{ $current=$iv_ruleIndex.current; }
	EOF;

// Rule Index
ruleIndex returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIndexAccess().getIndexAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getIndexAccess().getFieldNameEStringParserRuleCall_1_0());
				}
				lv_fieldName_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIndexRule());
					}
					set(
						$current,
						"fieldName",
						lv_fieldName_1_0,
						"es.um.nosql.schemainference.dslparameter.ODMParameter.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_2='->'
		{
			newLeafNode(otherlv_2, grammarAccess.getIndexAccess().getHyphenMinusGreaterThanSignKeyword_2());
		}
		(
			otherlv_3='kind:'
			{
				newLeafNode(otherlv_3, grammarAccess.getIndexAccess().getKindKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIndexAccess().getKindIndexKindEnumRuleCall_3_1_0());
					}
					lv_kind_4_0=ruleIndexKind
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIndexRule());
						}
						set(
							$current,
							"kind",
							lv_kind_4_0,
							"es.um.nosql.schemainference.dslparameter.ODMParameter.IndexKind");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Rule IndexKind
ruleIndexKind returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Sorted'
			{
				$current = grammarAccess.getIndexKindAccess().getSortedEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getIndexKindAccess().getSortedEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Hashed'
			{
				$current = grammarAccess.getIndexKindAccess().getHashedEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getIndexKindAccess().getHashedEnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
